{"version":3,"sources":["index.js"],"names":["Square","React","forwardRef","props","ref","bgCol","value","ftSiz","className","highlight","onMouseEnter","onMouseLeave","onMouseUp","onMouseDown","NewGameButton","onClick","Board","forwardRefs","squares","Array","i","length","j","rand123","preBoard","state","trace","points","lastTouch","x","y","type","this","setState","event","touch","touches","node","current","boundingClientRect","getBoundingClientRect","left","clientX","right","top","clientY","bottom","mtype","handleMouse","console","log","hasMoreMoves","concat","last","isAdjacent","idx","isInTrace","splice","calculatePoints","x1","y1","x2","y2","dx","Math","abs","dy","new_preBoard","slice","v","new_squares","pop","unshift","i1","j1","key","board","row","createRef","push","renderSquare","toString","PREVIEW","renderPreSquare","status","newGame","restartGame","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onTouchCancel","Component","Game","href","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf3e618d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst BOARD_WIDTH = 5;\nconst BOARD_HEIGHT = 5;\nconst PREVIEW = 5;\n\nconst Square = React.forwardRef((props, ref) => {\n  let bgCol;\n  switch(props.value){\n    case 1:\n      bgCol = \"bg-col1\";\n      break;\n    case 2:\n      bgCol = \"bg-col2\";\n      break;\n    case 3:\n      bgCol = \"bg-col3\";\n      break;\n    default:\n      bgCol = \"bg-col4\";\n      break;\n  }\n\n  let ftSiz = \"number-sz1\";\n  if (props.value/1000>=1){\n    ftSiz = \"number-sz3\";\n  }\n  else if (props.value/100>=1){\n    ftSiz = \"number-sz2\";\n  }\n\n  return (\n    <button \n      className = {\"square \" + ftSiz + \" \" + (props.highlight ? \"highlight\" : bgCol)}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n      onMouseUp={props.onMouseUp}\n      onMouseDown={props.onMouseDown}\n      ref = {ref}\n    >\n      {props.value}\n    </button>\n  );\n});\n\nfunction NewGameButton(props) {\n  return (\n    <button\n      className=\"new-game-btn\"\n      onClick={props.onClick}\n    >New Game!</button>);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.forwardRefs = [];\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      this.forwardRefs[i]=[];\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n        this.forwardRefs[i][j] = null;\n      }\n    }\n    let preBoard = Array(PREVIEW);\n    for (i = preBoard.length - 1; i >= 0; i--) {\n      preBoard[i] = rand123();\n    }\n    this.state = {\n      squares: squares,\n      trace: [],\n      points: 0,\n      preBoard : preBoard,\n    };\n    this.lastTouch = {\n      x: -1,\n      y: -1,\n      type: null,\n    }\n  }\n\n  restartGame() {\n    this.forwardRefs = [];\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      this.forwardRefs[i]=[];\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n        this.forwardRefs[i][j] = null;\n      }\n    }\n    let preBoard = Array(PREVIEW);\n    for (i = preBoard.length - 1; i >= 0; i--) {\n      preBoard[i] = rand123();\n    }\n    this.setState({\n      squares: squares,\n      trace: [],\n      points: 0,\n      preBoard : preBoard,\n    });\n    this.lastTouch = {\n      x: -1,\n      y: -1,\n      type: null,\n    }\n  }\n\n  handleTouch(type,event) {\n    const touch = event.touches[0];\n    let x=-1;\n    let y=-1;\n    let squares = 0;\n    if (touch){\n      for (var i = 0; i < this.forwardRefs.length; i++){\n        for (var j = 0; j < this.forwardRefs[i].length; j++){\n          const node = this.forwardRefs[i][j].current;\n          if (node && touch){\n            const boundingClientRect = node.getBoundingClientRect();\n            if ((boundingClientRect.left <= touch.clientX) &&\n              (touch.clientX< boundingClientRect.right) &&\n              (boundingClientRect.top <= touch.clientY) &&\n              (touch.clientY < boundingClientRect.bottom)){\n                x = i;\n                y = j;\n                squares++;\n            }\n          }\n        }\n      }\n    } else {\n      x = this.lastTouch[x];\n      y = this.lastTouch[y];\n    }\n    if (this.lastTouch[x] === x &&\n      this.lastTouch[y] === y &&\n      this.lastTouch[type] === type)\n      return;\n    this.lastTouch = {\n      x:x,\n      y:y,\n      type: type,\n    }\n    let mtype;\n    switch(type) {\n      case \"start\":\n        mtype = \"down\";\n        break;\n      case \"move\":\n        mtype = \"enter\";\n        break\n      case \"end\":\n      case \"cancel\":\n      default:\n        mtype = \"up\";\n        break;\n    }\n    this.handleMouse(x,y,mtype);\n    if (squares>1)\n      console.log(\"Error: tracked more than one row\", event, i, j, squares);\n  }\n\n  handleMouse(x,y,event) {\n    if (!this.hasMoreMoves()){\n      return;\n    }\n    if (this.state.trace.length === 0) { // not currently drawing\n      if (event === \"down\") {\n        const trace = this.state.trace.concat([{x:x,y:y}]);\n        this.setState({trace: trace});\n      }\n    } else {\n      if (x === -1 && y === -1) {\n        event = \"up\";\n      }\n      const last = this.state.trace[this.state.trace.length - 1];\n      if ( x > -1 && y > -1 && !this.isAdjacent(x,y, last['x'], last['y']) ) {\n        // wrong track, reset\n        this.setState({trace: []});\n      }\n      switch(event){\n        case \"enter\":\n          const idx = this.isInTrace(x,y);\n          if (idx > -1) {\n            this.setState({trace: this.state.trace.splice(0,idx+1)});\n          } else {\n            this.setState({trace: this.state.trace.concat([{x:x,y:y}])});\n          }\n          break;\n        case \"up\":\n          if (x === -1 && y === -1){\n            this.setState({trace: []});\n            break;\n          }\n          const [points, squares, preBoard] = this.calculatePoints();\n          if (squares !== null)\n            this.setState({\n                trace: [], \n                points: this.state.points + points, \n                squares: squares,\n                preBoard: preBoard,\n              });\n          else\n            this.setState({trace: []});\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  isInTrace(x,y) {\n    for (var i = 0; i < this.state.trace.length; i++) {\n      if (this.state.trace[i]['x'] === x && this.state.trace[i]['y'] === y){\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  isAdjacent(x1,y1,x2,y2) {\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n\n    if (dx === 1 && dy === 0)\n      return true;\n    if (dx === 0 && dy === 1)\n      return true;\n    return false;\n  }\n\n  calculatePoints(){\n    const trace = this.state.trace;\n    const squares = this.state.squares;\n    const new_preBoard = this.state.preBoard.slice();\n    if (trace.length === 0 || trace.length === 1){\n      return [0, null];\n    }\n    const v = squares[trace[0]['x']][trace[1]['y']];\n    let points = v;\n\n    for (var i = 1; i < trace.length; i++) {\n      if (v !== squares[trace[i]['x']][trace[i]['y']]){\n        return [0, null];\n      } else {\n        points += v;\n      }\n    }\n\n    let new_squares = Array(BOARD_HEIGHT);\n    for (i = new_squares.length - 1; i >= 0; i--) {\n      new_squares[i] = Array(BOARD_WIDTH);\n      for (var j = new_squares[i].length - 1; j >= 0; j--) {\n        new_squares[i][j] = squares[i][j];\n      }\n    }\n    for (i = 0; i < trace.length-1; i++) {\n      new_squares[trace[i]['x']][trace[i]['y']] = new_preBoard.pop();\n      new_preBoard.unshift(rand123());\n    }\n    new_squares[trace[trace.length-1]['x']][trace[trace.length-1]['y']] = points;\n    return [points, new_squares, new_preBoard];\n  }\n\n  hasMoreMoves(){\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      const i1 = i+1;\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const j1 = j+1;\n        if (i1 < BOARD_HEIGHT && this.state.squares[i][j] === this.state.squares[i1][j]){\n          return true;\n        }\n        if (j1 < BOARD_WIDTH && this.state.squares[i][j] === this.state.squares[i][j1]){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renderSquare(x,y,ref) {\n    return <Square \n        value={this.state.squares[x][y]}\n        highlight={this.isInTrace(x, y) > -1} \n        onMouseEnter={() => this.handleMouse(x,y,\"enter\")}\n        onMouseUp={() => this.handleMouse(x,y,\"up\")}\n        onMouseDown={() => this.handleMouse(x,y,\"down\")}\n        key={x + \"_\" + y}\n        ref={ref}\n      />;\n  }\n\n  renderPreSquare(i) {\n    return <Square \n        value={this.state.preBoard[i]}\n        key={\"idx_\" + i}\n      />;\n  }\n\n  render() {\n    let board = [];\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      let row = [];\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const ref = React.createRef();\n        row.push(this.renderSquare(i,j,ref));\n        this.forwardRefs[i][j] = ref;\n      }\n      board.push(<div className=\"board-row\" key={i.toString()}>\n        {row}\n      </div>);\n    }\n    let preBoard = [];\n    for (i = PREVIEW-1; i >= 0; i--) {\n      preBoard.push(this.renderPreSquare(i));\n    }\n    const hasMoreMoves = this.hasMoreMoves() ;\n    const status = (hasMoreMoves ? \"Points: \" : \"Match ended. Points: \") + this.state.points;\n    const newGame = hasMoreMoves ? [] : [<NewGameButton\n          onClick={()=>this.restartGame()}\n          key = \"newGame\"\n        />];\n    return (\n      <div>\n        <div\n          className=\"pre-board\">\n          {preBoard}\n        </div>\n        <div className=\"game-board-inner\">\n          <div\n            className=\"board\"\n            onMouseLeave={() => this.handleMouse(-1,-1,\"leave\")}\n            onTouchStart={(event) => this.handleTouch(\"start\",event)}\n            onTouchMove={(event) => this.handleTouch(\"move\",event)}\n            onTouchEnd={(event) => this.handleTouch(\"end\",event)}\n            onTouchCancel={(event) => this.handleTouch(\"cancel\",event)}\n            >\n            {board}\n          </div>\n          <div className=\"clear\"/>\n        </div>\n        <div className=\"status\">{status}</div>\n        {newGame}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n          <p>Game inspired by <a href=\"https://gridentify.com/\">Gridentify</a> with few changes.</p>\n          <p className=\"explanation\">Draw on equal number on the {BOARD_WIDTH} by {BOARD_HEIGHT} below. \n          The last number you select get replaced by the sum of the number you selected. \n          The others get pulled from the preview row on top (left to right).</p>\n        </div>\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction rand123(){\n  return Math.floor(Math.random() * 3) + 1;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}