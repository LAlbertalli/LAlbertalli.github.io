{"version":3,"sources":["index.js"],"names":["Square","React","forwardRef","props","ref","bgCol","value","className","highlight","onMouseEnter","onMouseLeave","onMouseUp","onMouseDown","NewGameButton","onClick","Board","forwardRefs","squares","Array","i","length","j","rand123","state","trace","points","lastTouch","x","y","type","this","setState","event","touch","touches","node","current","boundingClientRect","getBoundingClientRect","left","clientX","right","top","clientY","bottom","mtype","handleMouse","console","log","hasMoreMoves","concat","last","isAdjacent","idx","isInTrace","splice","calculatePoints","x1","y1","x2","y2","dx","Math","abs","dy","v","new_squares","i1","j1","key","board","row","createRef","push","renderSquare","toString","status","newGame","restartGame","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onTouchCancel","Component","Game","href","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80a9890a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst BOARD_WIDTH = 5;\nconst BOARD_HEIGHT = 5;\n\nconst Square = React.forwardRef((props, ref) => {\n  let bgCol;\n  switch(props.value){\n    case 1:\n      bgCol = \"bg-col1\";\n      break;\n    case 2:\n      bgCol = \"bg-col2\";\n      break;\n    case 3:\n      bgCol = \"bg-col3\";\n      break;\n    default:\n      bgCol = \"bg-col4\";\n      break;\n  }\n  return (\n    <button \n      className = {\"square \" + (props.highlight ? \"highlight\" : bgCol)}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n      onMouseUp={props.onMouseUp}\n      onMouseDown={props.onMouseDown}\n      ref = {ref}\n    >\n      {props.value}\n    </button>\n  );\n});\n\nfunction NewGameButton(props) {\n  return (\n    <button\n      className=\"new-game-btn\"\n      onClick={props.onClick}\n    >New Game!</button>);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.forwardRefs = [];\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      this.forwardRefs[i]=[];\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n        this.forwardRefs[i][j] = null;\n      }\n    }\n    this.state = {\n      squares: squares,\n      trace: [],\n      points: 0,\n    };\n    this.lastTouch = {\n      x: -1,\n      y: -1,\n      type: null,\n    }\n  }\n\n  restartGame() {\n    this.forwardRefs = [];\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      this.forwardRefs[i]=[];\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n        this.forwardRefs[i][j] = null;\n      }\n    }\n    this.setState({\n      squares: squares,\n      trace: [],\n      points: 0,\n    });\n    this.lastTouch = {\n      x: -1,\n      y: -1,\n      type: null,\n    }\n  }\n\n  handleTouch(type,event) {\n    const touch = event.touches[0];\n    let x=-1;\n    let y=-1;\n    let squares = 0;\n    if (touch){\n      for (var i = 0; i < this.forwardRefs.length; i++){\n        for (var j = 0; j < this.forwardRefs[i].length; j++){\n          const node = this.forwardRefs[i][j].current;\n          if (node && touch){\n            const boundingClientRect = node.getBoundingClientRect();\n            if ((boundingClientRect.left <= touch.clientX) &&\n              (touch.clientX< boundingClientRect.right) &&\n              (boundingClientRect.top <= touch.clientY) &&\n              (touch.clientY < boundingClientRect.bottom)){\n                x = i;\n                y = j;\n                squares++;\n            }\n          }\n        }\n      }\n    } else {\n      x = this.lastTouch[x];\n      y = this.lastTouch[y];\n    }\n    if (this.lastTouch[x] === x &&\n      this.lastTouch[y] === y &&\n      this.lastTouch[type] === type)\n      return;\n    this.lastTouch = {\n      x:x,\n      y:y,\n      type: type,\n    }\n    let mtype;\n    switch(type) {\n      case \"start\":\n        mtype = \"down\";\n        break;\n      case \"move\":\n        mtype = \"enter\";\n        break\n      case \"end\":\n      case \"cancel\":\n      default:\n        mtype = \"up\";\n        break;\n    }\n    this.handleMouse(x,y,mtype);\n    if (squares>1)\n      console.log(\"Error: tracked more than one row\", event, i, j, squares);\n  }\n\n  handleMouse(x,y,event) {\n    if (!this.hasMoreMoves()){\n      return;\n    }\n    if (this.state.trace.length === 0) { // not currently drawing\n      if (event === \"down\") {\n        const trace = this.state.trace.concat([{x:x,y:y}]);\n        this.setState({trace: trace});\n      }\n    } else {\n      if (x === -1 && y === -1) {\n        event = \"up\";\n      }\n      const last = this.state.trace[this.state.trace.length - 1];\n      if ( x > -1 && y > -1 && !this.isAdjacent(x,y, last['x'], last['y']) ) {\n        // wrong track, reset\n        this.setState({trace: []});\n      }\n      switch(event){\n        case \"enter\":\n          const idx = this.isInTrace(x,y);\n          if (idx > -1) {\n            this.setState({trace: this.state.trace.splice(0,idx+1)});\n          } else {\n            this.setState({trace: this.state.trace.concat([{x:x,y:y}])});\n          }\n          break;\n        case \"up\":\n          if (x === -1 && y === -1){\n            this.setState({trace: []});\n            break;\n          }\n          const [points, squares] = this.calculatePoints();\n          if (squares !== null)\n            this.setState({trace: [], points: this.state.points + points, squares: squares});\n          else\n            this.setState({trace: []});\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  isInTrace(x,y) {\n    for (var i = 0; i < this.state.trace.length; i++) {\n      if (this.state.trace[i]['x'] === x && this.state.trace[i]['y'] === y){\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  isAdjacent(x1,y1,x2,y2) {\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n\n    if (dx === 1 && dy === 0)\n      return true;\n    if (dx === 0 && dy === 1)\n      return true;\n    return false;\n  }\n\n  calculatePoints(){\n    const trace = this.state.trace;\n    const squares = this.state.squares;\n    if (trace.length === 0 || trace.length === 1){\n      return [0, null];\n    }\n    const v = squares[trace[0]['x']][trace[1]['y']];\n    let points = v;\n\n    for (var i = 1; i < trace.length; i++) {\n      if (v !== squares[trace[i]['x']][trace[i]['y']]){\n        return [0, null];\n      } else {\n        points += v;\n      }\n    }\n\n    let new_squares = Array(BOARD_HEIGHT);\n    for (i = new_squares.length - 1; i >= 0; i--) {\n      new_squares[i] = Array(BOARD_WIDTH);\n      for (var j = new_squares[i].length - 1; j >= 0; j--) {\n        new_squares[i][j] = squares[i][j];\n      }\n    }\n    for (i = 0; i < trace.length-1; i++) {\n      new_squares[trace[i]['x']][trace[i]['y']] = rand123();\n    }\n    new_squares[trace[trace.length-1]['x']][trace[trace.length-1]['y']] = points;\n    return [points, new_squares];\n  }\n\n  hasMoreMoves(){\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      const i1 = i+1;\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const j1 = j+1;\n        if (i1 < BOARD_HEIGHT && this.state.squares[i][j] === this.state.squares[i1][j]){\n          return true;\n        }\n        if (j1 < BOARD_WIDTH && this.state.squares[i][j] === this.state.squares[i][j1]){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renderSquare(x,y,ref) {\n    return <Square \n        value={this.state.squares[x][y]}\n        highlight={this.isInTrace(x, y) > -1} \n        onMouseEnter={() => this.handleMouse(x,y,\"enter\")}\n        onMouseUp={() => this.handleMouse(x,y,\"up\")}\n        onMouseDown={() => this.handleMouse(x,y,\"down\")}\n        key={x + \"_\" + y}\n        ref={ref}\n      />;\n  }\n\n  render() {\n    let board = [];\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      let row = [];\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const ref = React.createRef();\n        row.push(this.renderSquare(i,j,ref));\n        this.forwardRefs[i][j] = ref;\n      }\n      board.push(<div className=\"board-row\" key={i.toString()}>\n        {row}\n      </div>);\n    }\n    const hasMoreMoves = this.hasMoreMoves() ;\n    const status = (hasMoreMoves ? \"Points: \" : \"Match ended. Points: \") + this.state.points;\n    const newGame = hasMoreMoves ? [] : [<NewGameButton\n          onClick={()=>this.restartGame()}\n          key = \"newGame\"\n        />];\n    return (\n      <div>\n        <div className=\"game-board-inner\">\n          <div\n            className=\"board\"\n            onMouseLeave={() => this.handleMouse(-1,-1,\"leave\")}\n            onTouchStart={(event) => this.handleTouch(\"start\",event)}\n            onTouchMove={(event) => this.handleTouch(\"move\",event)}\n            onTouchEnd={(event) => this.handleTouch(\"end\",event)}\n            onTouchCancel={(event) => this.handleTouch(\"cancel\",event)}\n            >\n            {board}\n          </div>\n          <div className=\"clear\"/>\n        </div>\n        <div className=\"status\">{status}</div>\n        {newGame}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n          Game inspired by <a href=\"https://gridentify.com/\">Gridentify</a> with few changes.\n        </div>\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction rand123(){\n  return Math.floor(Math.random() * 3) + 1;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}