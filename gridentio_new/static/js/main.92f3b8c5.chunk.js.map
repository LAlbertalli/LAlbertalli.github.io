{"version":3,"sources":["index.js"],"names":["Square","React","forwardRef","props","ref","bgCol","value","className","highlight","onMouseEnter","onMouseLeave","onMouseUp","onMouseDown","Board","forwardRefs","squares","Array","i","length","j","rand123","state","trace","points","lastTouch","x","y","type","event","touch","touches","this","node","current","boundingClientRect","getBoundingClientRect","left","clientX","right","top","clientY","bottom","mtype","handleMouse","console","log","hasMoreMoves","concat","setState","last","isAdjacent","idx","isInTrace","splice","calculatePoints","x1","y1","x2","y2","dx","Math","abs","dy","v","new_squares","i1","j1","key","board","row","createRef","push","renderSquare","toString","status","onTouchStart","handleTouch","onTouchMove","onTouchEnd","onTouchCancel","Component","Game","href","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92f3b8c5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst BOARD_WIDTH = 5;\nconst BOARD_HEIGHT = 5;\n\nconst Square = React.forwardRef((props, ref) => {\n  let bgCol;\n  switch(props.value){\n    case 1:\n      bgCol = \"bg-col1\";\n      break;\n    case 2:\n      bgCol = \"bg-col2\";\n      break;\n    case 3:\n      bgCol = \"bg-col3\";\n      break;\n    default:\n      bgCol = \"bg-col4\";\n      break;\n  }\n  return (\n    <button \n      className = {\"square \" + (props.highlight ? \"highlight\" : bgCol)}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n      onMouseUp={props.onMouseUp}\n      onMouseDown={props.onMouseDown}\n      ref = {ref}\n    >\n      {props.value}\n    </button>\n  );\n});\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.forwardRefs = [];\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      this.forwardRefs[i]=[];\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n        this.forwardRefs[i][j] = null;\n      }\n    }\n    this.state = {\n      squares: squares,\n      trace: [],\n      points: 0,\n    };\n    this.lastTouch = {\n      x: -1,\n      y: -1,\n      type: null,\n    }\n  }\n\n  handleTouch(type,event) {\n    const touch = event.touches[0];\n    let x=-1;\n    let y=-1;\n    let squares = 0;\n    if (touch){\n      for (var i = 0; i < this.forwardRefs.length; i++){\n        for (var j = 0; j < this.forwardRefs[i].length; j++){\n          const node = this.forwardRefs[i][j].current;\n          if (node && touch){\n            const boundingClientRect = node.getBoundingClientRect();\n            if ((boundingClientRect.left <= touch.clientX) &&\n              (touch.clientX< boundingClientRect.right) &&\n              (boundingClientRect.top <= touch.clientY) &&\n              (touch.clientY < boundingClientRect.bottom)){\n                x = i;\n                y = j;\n                squares++;\n            }\n          }\n        }\n      }\n    } else {\n      x = this.lastTouch[x];\n      y = this.lastTouch[y];\n    }\n    if (this.lastTouch[x] === x &&\n      this.lastTouch[y] === y &&\n      this.lastTouch[type] === type)\n      return;\n    this.lastTouch = {\n      x:x,\n      y:y,\n      type: type,\n    }\n    let mtype;\n    switch(type) {\n      case \"start\":\n        mtype = \"down\";\n        break;\n      case \"move\":\n        mtype = \"enter\";\n        break\n      case \"end\":\n      case \"cancel\":\n      default:\n        mtype = \"up\";\n        break;\n    }\n    this.handleMouse(x,y,mtype);\n    if (squares>1)\n      console.log(\"Error: tracked more than one row\", event, i, j, squares);\n  }\n\n  handleMouse(x,y,event) {\n    if (!this.hasMoreMoves()){\n      return;\n    }\n    if (this.state.trace.length === 0) { // not currently drawing\n      if (event === \"down\") {\n        const trace = this.state.trace.concat([{x:x,y:y}]);\n        this.setState({trace: trace});\n      }\n    } else {\n      if (x === -1 && y === -1) {\n        console.log(\"out\");\n        event = \"up\";\n      }\n      const last = this.state.trace[this.state.trace.length - 1];\n      if ( x > -1 && y > -1 && !this.isAdjacent(x,y, last['x'], last['y']) ) {\n        // wrong track, reset\n        this.setState({trace: []});\n      }\n      switch(event){\n        case \"enter\":\n          const idx = this.isInTrace(x,y);\n          if (idx > -1) {\n            this.setState({trace: this.state.trace.splice(0,idx+1)});\n          } else {\n            this.setState({trace: this.state.trace.concat([{x:x,y:y}])});\n          }\n          break;\n        case \"up\":\n          if (x === -1 && y === -1){\n            this.setState({trace: []});\n            break;\n          }\n          const [points, squares] = this.calculatePoints();\n          if (squares !== null)\n            this.setState({trace: [], points: this.state.points + points, squares: squares});\n          else\n            this.setState({trace: []});\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  isInTrace(x,y) {\n    for (var i = 0; i < this.state.trace.length; i++) {\n      if (this.state.trace[i]['x'] === x && this.state.trace[i]['y'] === y){\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  isAdjacent(x1,y1,x2,y2) {\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n\n    if (dx === 1 && dy === 0)\n      return true;\n    if (dx === 0 && dy === 1)\n      return true;\n    return false;\n  }\n\n  calculatePoints(){\n    const trace = this.state.trace;\n    const squares = this.state.squares;\n    if (trace.length === 0 || trace.length === 1){\n      return [0, null];\n    }\n    const v = squares[trace[0]['x']][trace[1]['y']];\n    let points = v;\n\n    for (var i = 1; i < trace.length; i++) {\n      if (v !== squares[trace[i]['x']][trace[i]['y']]){\n        return [0, null];\n      } else {\n        points += v;\n      }\n    }\n\n    let new_squares = Array(BOARD_HEIGHT);\n    for (i = new_squares.length - 1; i >= 0; i--) {\n      new_squares[i] = Array(BOARD_WIDTH);\n      for (var j = new_squares[i].length - 1; j >= 0; j--) {\n        new_squares[i][j] = squares[i][j];\n      }\n    }\n    for (i = 0; i < trace.length-1; i++) {\n      new_squares[trace[i]['x']][trace[i]['y']] = rand123();\n    }\n    new_squares[trace[trace.length-1]['x']][trace[trace.length-1]['y']] = points;\n    return [points, new_squares];\n  }\n\n  hasMoreMoves(){\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      const i1 = i+1;\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const j1 = j+1;\n        if (i1 < BOARD_HEIGHT && this.state.squares[i][j] === this.state.squares[i1][j]){\n          return true;\n        }\n        if (j1 < BOARD_WIDTH && this.state.squares[i][j] === this.state.squares[i][j1]){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renderSquare(x,y,ref) {\n    return <Square \n        value={this.state.squares[x][y]}\n        highlight={this.isInTrace(x, y) > -1} \n        onMouseEnter={() => this.handleMouse(x,y,\"enter\")}\n        onMouseUp={() => this.handleMouse(x,y,\"up\")}\n        onMouseDown={() => this.handleMouse(x,y,\"down\")}\n        key={x + \"_\" + y}\n        ref={ref}\n      />;\n  }\n\n  render() {\n    let board = [];\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      let row = [];\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const ref = React.createRef();\n        row.push(this.renderSquare(i,j,ref));\n        this.forwardRefs[i][j] = ref;\n      }\n      board.push(<div className=\"board-row\" key={i.toString()}>\n        {row}\n      </div>);\n    }\n    const status = (this.hasMoreMoves() ? \"Points: \" : \"Match ended. Points: \") + this.state.points;\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"game-board-inner\">\n          <div\n            className=\"board\"\n            onMouseLeave={() => this.handleMouse(-1,-1,\"leave\")}\n            onTouchStart={(event) => this.handleTouch(\"start\",event)}\n            onTouchMove={(event) => this.handleTouch(\"move\",event)}\n            onTouchEnd={(event) => this.handleTouch(\"end\",event)}\n            onTouchCancel={(event) => this.handleTouch(\"cancel\",event)}\n            >\n            {board}\n          </div>\n        </div>\n        <div className=\"clear\"/>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n          Game inspired by <a href=\"https://gridentify.com/\">Gridentify</a> with few changes.\n        </div>\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction rand123(){\n  return Math.floor(Math.random() * 3) + 1;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}