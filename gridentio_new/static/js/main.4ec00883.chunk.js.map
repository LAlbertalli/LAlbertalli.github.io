{"version":3,"sources":["index.js"],"names":["Square","props","bgCol","value","className","highlight","onMouseEnter","onMouseLeave","onMouseUp","onMouseDown","Board","squares","Array","i","length","j","rand123","state","trace","points","x","y","event","this","hasMoreMoves","concat","setState","last","isAdjacent","idx","isInTrace","splice","calculatePoints","x1","y1","x2","y2","dx","Math","abs","dy","v","new_squares","i1","j1","handleMouse","key","board","row","push","renderSquare","toString","status","React","Component","Game","href","floor","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ec00883.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst BOARD_WIDTH = 5;\nconst BOARD_HEIGHT = 5;\n\nfunction Square(props) {\n  let bgCol;\n  switch(props.value){\n    case 1:\n      bgCol = \"bg-col1\";\n      break;\n    case 2:\n      bgCol = \"bg-col2\";\n      break;\n    case 3:\n      bgCol = \"bg-col3\";\n      break;\n    default:\n      bgCol = \"bg-col4\";\n      break;\n  }\n  return (\n    <button \n      className = {\"square \" + (props.highlight ? \"highlight\" : bgCol)}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n      onMouseUp={props.onMouseUp}\n      onMouseDown={props.onMouseDown}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    let squares = Array(BOARD_HEIGHT);\n    for (var i = squares.length - 1; i >= 0; i--) {\n      squares[i] = Array(BOARD_WIDTH);\n      for (var j = squares[i].length - 1; j >= 0; j--) {\n        squares[i][j] = rand123();\n      }\n    }\n    this.state = {\n      squares: squares,\n      trace: [],\n      points: 0,\n    };\n  }\n\n  handleMouse(x,y,event) {\n    if (!this.hasMoreMoves()){\n      return;\n    }\n    if (this.state.trace.length === 0) { // not currently drawing\n      if (event === \"down\") {\n        const trace = this.state.trace.concat([{x:x,y:y}]);\n        this.setState({trace: trace});\n      }\n    } else {\n      if (x === -1 && y === -1) {\n        event = \"up\";\n      }\n      const last = this.state.trace[this.state.trace.length - 1];\n      if ( x > -1 && y > -1 && !this.isAdjacent(x,y, last['x'], last['y']) ) {\n        // wrong track, reset\n        this.setState({trace: []});\n      }\n      switch(event){\n        case \"enter\":\n          const idx = this.isInTrace(x,y);\n          if (idx > -1) {\n            this.setState({trace: this.state.trace.splice(0,idx+1)});\n          } else {\n            this.setState({trace: this.state.trace.concat([{x:x,y:y}])});\n          }\n          break;\n        case \"up\":\n          if (x === -1 && y === -1){\n            this.setState({trace: []});\n            break;\n          }\n          const [points, squares] = this.calculatePoints();\n          if (squares !== null)\n            this.setState({trace: [], points: this.state.points + points, squares: squares});\n          else\n            this.setState({trace: []});\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  isInTrace(x,y) {\n    for (var i = 0; i < this.state.trace.length; i++) {\n      if (this.state.trace[i]['x'] === x && this.state.trace[i]['y'] === y){\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  isAdjacent(x1,y1,x2,y2) {\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n\n    if (dx === 1 && dy === 0)\n      return true;\n    if (dx === 0 && dy === 1)\n      return true;\n    return false;\n  }\n\n  calculatePoints(){\n    const trace = this.state.trace;\n    const squares = this.state.squares;\n    if (trace.length === 0 || trace.length === 1){\n      return [0, null];\n    }\n    const v = squares[trace[0]['x']][trace[1]['y']];\n    let points = v;\n\n    for (var i = 1; i < trace.length; i++) {\n      if (v !== squares[trace[i]['x']][trace[i]['y']]){\n        return [0, null];\n      } else {\n        points += v;\n      }\n    }\n\n    let new_squares = Array(BOARD_HEIGHT);\n    for (i = new_squares.length - 1; i >= 0; i--) {\n      new_squares[i] = Array(BOARD_WIDTH);\n      for (var j = new_squares[i].length - 1; j >= 0; j--) {\n        new_squares[i][j] = squares[i][j];\n      }\n    }\n    for (i = 0; i < trace.length-1; i++) {\n      new_squares[trace[i]['x']][trace[i]['y']] = rand123();\n    }\n    new_squares[trace[trace.length-1]['x']][trace[trace.length-1]['y']] = points;\n    return [points, new_squares];\n  }\n\n  hasMoreMoves(){\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      const i1 = i+1;\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        const j1 = j+1;\n        if (i1 < BOARD_HEIGHT && this.state.squares[i][j] === this.state.squares[i1][j]){\n          return true;\n        }\n        if (j1 < BOARD_WIDTH && this.state.squares[i][j] === this.state.squares[i][j1]){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  renderSquare(x,y) {\n    return <Square \n        value={this.state.squares[x][y]}\n        highlight={this.isInTrace(x, y) > -1} \n        onMouseEnter={() => this.handleMouse(x,y,\"enter\")}\n        onMouseUp={() => this.handleMouse(x,y,\"up\")}\n        onMouseDown={() => this.handleMouse(x,y,\"down\")} \n        key={x + \"_\" + y}\n      />;\n  }\n\n  render() {\n    let board = [];\n    for (var i = 0; i < BOARD_HEIGHT; i++) {\n      let row = [];\n      for (var j = 0; j < BOARD_WIDTH; j++) {\n        row.push(this.renderSquare(i,j));\n      }\n      board.push(<div className=\"board-row\" key={i.toString()}>\n        {row}\n      </div>);\n    }\n    const status = (this.hasMoreMoves() ? \"Points: \" : \"Match ended. Points: \") + this.state.points;\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div onMouseLeave={() => this.handleMouse(-1,-1,\"leave\")}>\n          {board}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n          Game inspired by <a href=\"https://gridentify.com/\">Gridentify</a> with few changes.\n        </div>\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction rand123(){\n  return Math.floor(Math.random() * 3) + 1;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}